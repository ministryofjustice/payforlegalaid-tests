name: Deploy to dev
on:
  push:
    branches:
      - feature/lpf-535b
  workflow_dispatch:
  repository_dispatch:
    types: [ trigger-tests ]

env:
  USERNAME: ${{ secrets.OPENAPI_PACKAGE_USER }}
  PASSWORD: ${{ secrets.OPENAPI_PACKAGE_PASSWORD }}

jobs:
  run_tests:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Checkout Github Repository
        uses: actions/checkout@v4
        with:
          path: testCode

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Checkout source code repo
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/payforlegalaid
          path: sourceCode

      - name: Build source code
        run: |
          cd sourceCode
          mvn -B -DskipTests clean install -s .github/settings.xml
#
#      - name: Checkout Github Repository
#        uses: actions/checkout@v4

      - name: Build and save Docker Buildx
        uses: './.github/build-push-docker-image'

      - name: Configure Kubeconfig
        run: |
          echo "$KUBECONFIG_DATA" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Load Docker Image into Kubernetes Nodes
        run: |
          kubectl get nodes -o name | cut -d'/' -f2 | while read node; do
            echo "Loading image into $node"
            kubectl cp payforlegalaid-tests.tar $node:/payforlegalaid-tests.tar
            kubectl exec -it $node -- docker load -i /payforlegalaid-tests.tar
          done

      - name: Set Default Namespace
        run: kubectl config set-context --current --namespace=laa-get-payments-finance-data-dev

      - name: Deploy to Kubernetes
        run: kubectl apply -f deployments/development/deployment.tpl
      
#
#      - uses: './.github/build-push-docker-image'
##        todo update this so it builds only and does not push
#        env:
#          REPOSITORY: ${{ vars.DEV_ECR_REPOSITORY }}
#          IMAGE_TAG: ${{ github.sha }}
#          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#
#      - name: Generate Kubernetes files from templates
#        env:
#          IMAGE_TAG: ${{ github.sha }} # Tags ECR image with commit sha
#          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          REPOSITORY: ${{ vars.DEV_ECR_REPOSITORY }}
#          NAMESPACE: ${{ secrets.KUBE_NAMESPACE_DEV }}
#          ALERT_SEVERITY: laa-get-legal-aid-data-dev
#          ENV_NAME: dev
#        run: |
#          cat deployments/development/deployment.tpl | envsubst > deployments/development/deployment.yml
#      - name: Authenticate with Cloud Platform and Deploy
#        env:
#          KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE_DEV }}
#          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER_DEV }}
#        run: |
#          echo "${{ secrets.KUBE_CERT_DEV }}" > ca.crt
#          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
#          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN_DEV }}
#          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${KUBE_NAMESPACE}
#          kubectl config use-context ${KUBE_CLUSTER}
#          kubectl -n ${KUBE_NAMESPACE} apply -f deployments/development/